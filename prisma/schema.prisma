generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TblUser {
  id        String        @id @default(uuid()) @map("id")
  firstName String        @map("first_name")
  lastName  String        @map("last_name")
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  userLogin TblUserLogin?

  @@map("tbl_user")
}

model TblRole {
  id          String        @id @default(uuid()) @map("id")
  name        String        @unique @map("name")
  description String?       @map("description")
  userRoles   TblUserRole[]

  @@map("tbl_role")
}

model TblUserLogin {
  id                  String        @id @default(uuid()) @map("id")
  userId              String        @unique @map("user_id")
  email               String        @unique @map("email")
  password            String        @map("password")
  verifiedEmail       Boolean       @default(false) @map("verified_email")
  lastLogin           DateTime      @default(now()) @map("last_login")
  createdAt           DateTime      @default(now()) @map("created_at")
  passwordChangedAt   DateTime?     @map("password_changed_at")
  failedLoginAttempts Int           @default(0) @map("failed_login_attempts")
  lockUntil           DateTime?     @map("lock_until")
  user                TblUser       @relation(fields: [userId], references: [id])
  userRoles           TblUserRole[]

  @@map("tbl_user_login")
}

model TblUserRole {
  id          String       @id @default(uuid()) @map("id")
  userLoginId String       @map("user_login_id")
  roleId      String       @map("role_id")
  active      Boolean      @map("active")
  assignedAt  DateTime     @default(now()) @map("assigned_at")
  revokedAt   DateTime?    @map("revoked_at")
  userLogin   TblUserLogin @relation(fields: [userLoginId], references: [id])
  role        TblRole      @relation(fields: [roleId], references: [id])

  @@map("tbl_user_role")
}
